// Initial position of the character
var characterX = 160;  // Starting X position
var characterY = 190;  // Starting Y position

// Speed of movement for the character
var speed = 5;

// Key codes for movement
var w = 87; 
var s = 83;
var a = 65;
var d = 68;

// Initial position of the shape (spiral ball)
var centerX = 300;  
var centerY = 250;  

// Spiral properties
var angle = 0;
var radius = 2;  

// Spiral speed
var angleSpeed = 0.1;   
var radiusGrowth = 0.2; 

// Peaceable ball properties
let circleX, circleY;
let circleSize = 50;

// Moving balls
let balls = [];
let numBalls = 20;

function setup() {
  createCanvas(600, 500);
  
  circleX = width / 2; // Initial position of the peaceable ball
  circleY = height / 2;
  
  // Create balls with the same color
  let ballColor = [223, 178, 244]; // Define a single color for all balls
  for (let i = 0; i < numBalls; i++) {
    balls.push({
      x: random(width),
      y: random(height),
      size: random(20, 50),
      xSpeed: random(-3, 3),
      ySpeed: random(-3, 3),
      color: ballColor // Assign the same color
    });
  }
}

function draw() { 
  background(123, 23, 129);

  // Draw borders
  createBorders(10);

  // Draw the peaceable ball
  fill(23, 12, 117); // Unique color for the peaceable ball
  noStroke();
  ellipse(circleX, circleY, circleSize);

  // Draw the player character
  fill(13, 145, 14);
  circle(characterX, characterY, 20);

  // Win condition
  if (characterX > width - 10 && characterY > height - 26) {
    fill(0);
    textSize(26);
    text("You Win!", width / 2 - 50, height / 2 - 50);
    noLoop(); // Stop the game
  }

  // Draw the maze
  fill(23, 12, 117);
  rect(390, 430, 200, 20);
  rect(390, 250, 20, 200);
  rect(390, 150, 20, 200);
  rect(3, 250, 200, 20);
  rect(199, 150, 20, 200);
  rect(70, 130, 150, 20);
  rect(199, 60, 20, 200);
  rect(220, 200, 90, 20);

  // Exit
  fill(32, 146, 232);
  textSize(16);
  text("EXIT", width - 50, height - 26);

  // Spiral ball
  let shapeX = centerX + cos(angle) * radius;
  let shapeY = centerY + sin(angle) * radius;
  fill(32, 146, 232);
  circle(shapeX, shapeY, 10);
  angle += angleSpeed;
  radius += radiusGrowth;

  // Character movement
  characterMovement();

  // Moving balls
  ballMovement();
}

function mousePressed() {
  // Update the peaceable ball's position to where the mouse is clicked
  circleX = mouseX;
  circleY = mouseY;
}

function createBorders(thickness) {
  fill(23, 12, 117);
  // Top border
  rect(0, 0, width, thickness);
  // Left border
  rect(0, 0, thickness, height);
  // Bottom border
  rect(0, height - thickness, width, thickness);
  // Right upper border
  rect(width - thickness, 0, thickness, height - 50); 
}

function characterMovement() {
  if (keyIsDown(w)) {
    characterY -= speed;
  }
  if (keyIsDown(s)) {
    characterY += speed;
  }
  if (keyIsDown(a)) {
    characterX -= speed;
  }
  if (keyIsDown(d)) {
    characterX += speed;
  }
}

function ballMovement() {
  for (let ball of balls) {
    fill(ball.color);
    noStroke();
    ellipse(ball.x, ball.y, ball.size);

    // Move the ball
    ball.x += ball.xSpeed;
    ball.y += ball.ySpeed;

    // Reverse direction if it hits the edge
    if (ball.x - ball.size / 2 < 0 || ball.x + ball.size / 2 > width) {
      ball.xSpeed *= -1;
    }
    if (ball.y - ball.size / 2 < 0 || ball.y + ball.size / 2 > height) {
      ball.ySpeed *= -1;
    }
  }
}

