// Initial position of the character
var characterX = 160;  // Starting X position (center of canvas)
var characterY = 190;  // Starting Y position (center of canvas)

// Speed of movement for the character
var speed = 5;

// define the key codes for each letter
var w = 87; 
var s = 83;
var a = 65;
var d = 68;

// Initial position of the shape (ball)
var centerX = 300;  
var centerY = 250;  

// Angle and radius to calculate the spiral
var angle = 0;
var radius = 2;  

// Faster speeds for the spiral's rotation and growth
var angleSpeed = 0.1;   
var radiusGrowth = 0.2; 


let circleX, circleY;
let circleSize = 50;

function setup() {
  createCanvas(600, 500);
  
  circleX = width / 2; // Initial position at the center
  circleY = height / 2;
  
}


function draw() { 
   background(123,23,129);


  //called function
  createBorders(10);

  ellipse(circleX, circleY, circleSize);
  
  rect(300, 290, 90, 20);
  // Draw the character as a circle
  fill(13, 145, 14); // Set color for the character
  circle(characterX, characterY, 20); // Draw the circle (character)

   
 if(characterX > width && characterY > width-26)
    {
        fill(0);
        stroke(5);
        textSize(26);
        text("You Win!", width/2-50, height/2-50);
    }
      
  
  //maze
fill (23,12,117)
 rect(390, 430, 200, 20);
   rect(390, 250, 20, 200);
   rect(390, 150, 20, 200);
  rect(3, 250, 200, 20);
  rect(199, 150, 20, 200);
    rect(70, 130, 150, 20);
   rect(199, 60, 20, 200);
  rect(300, 290, 90, 20);
  rect(220, 200, 90, 20);
  rect(300, 290, 90, 20);
  
    // exit
   fill(32,146,232);
    textSize(16);
    text("EXIT", width -50,height -26)
  
    // Calculate the x and y position based on the angle and radius
  var shapeX = centerX + cos(angle) * radius;
  var shapeY = centerY + sin(angle) * radius;

  // Draw the ball (shape) at the current position
  fill(32, 146, 232); 
  circle(shapeX, shapeY, 10); 

  // Update the angle and radius to create the spiral effect
  angle += angleSpeed;      
  radius += radiusGrowth;



  
// Called function 
  characterMovement();

}

function mousePressed() {
  // Update the circle's position to where the mouse is clicked
  circleX = mouseX;
  circleY = mouseY;
}

function createBorders(thickness)
{
  fill (23,12,117)
//boreders
 // top border
    rect(0,0,width,thickness);
    // left border
    rect(0,0,thickness,height);
    // bottom border
    rect(0, height-thickness,width, thickness);
    // right upper border
      rect(width - thickness, 0, thickness, height -50); 
}

function characterMovement()
{
    // handle the keys
    if(keyIsDown(w))
    {
        characterY -= 10;   
    }
    if(keyIsDown(s))
    {
        characterY += 10;   
    }
    if(keyIsDown(a))
    {
        characterX -= 10;   
        console.log("movement: " + characterX);
    }
    if(keyIsDown(d))
    {
        characterX += 10;   
    }
  
}
